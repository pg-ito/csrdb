// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
namespace csrdb
{

	public class CrossJoinStream :BaseStream, IStream
	{
		protected IStream input, inputJoin;
		protected List<Dictionary<string,string>> tuples;
		protected Dictionary<string,string> currentTuple;

		public CrossJoinStream (IStream input, IStream inputJoin)
		{
			this.input = input;
			this.inputJoin = inputJoin;
			this.index = 0;
			this.tuples = null;
			this.currentTuple = null;
		}

		public Dictionary<string,string> Next(){
			if (this.tuples.Count <= this.index) {
				this.index = 0;
				this.currentTuple = null;
			}

			if (this.currentTuple == null) {
				if (this.input.HasNext()) {
					this.currentTuple = this.input.Next();
				}
				if (this.currentTuple == null) {
					return null;
				}
			}

			var targetTuple = this.tuples[this.index++];

			Dictionary<string,string> result = new Dictionary<string,string>();


			foreach (KeyValuePair<string, string> col in this.currentTuple) {
				result.Add(col.Key,col.Value);
			}
			foreach (KeyValuePair<string, string> col in targetTuple) {
				if (result.ContainsKey (col.Key)) {
					continue;
				}
				result.Add(col.Key,col.Value);
			}
			return result;
		}

		public bool HasNext(){
			if (this.tuples == null) {
				this.tuples = new List<Dictionary<string, string>>();
				while (this.inputJoin.HasNext()) {
					this.tuples.Add(this.inputJoin.Next());
				}
			}

			if (this.tuples.Count > this.index) {
				return true;
			}
			return this.input.HasNext();
		}

		override public void Close(){
			this.input.Close();
			this.inputJoin.Close();
		}
	}
}

